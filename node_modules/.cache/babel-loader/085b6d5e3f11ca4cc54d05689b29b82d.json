{"ast":null,"code":"var _jsxFileName = \"/Users/rtdt/first-finished-app/src/nameInput.component.js\",\n    _s = $RefreshSig$();\n\nimport { TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Name = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [group, setGroup] = useState('');\n  const [customer, setCustomer] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(10),\n        width: '25ch'\n      }\n    }\n  }));\n  const classes = useStyles();\n  const groups = [{\n    value: 'VinFast',\n    label: 'VinFast'\n  }, {\n    value: 'VinSmart',\n    label: 'VinSmart'\n  }, {\n    value: 'VinMec',\n    label: 'VinMec'\n  }, {\n    value: 'VinPark',\n    label: 'VinPark'\n  }];\n  const customers = [{\n    value: 'M',\n    label: 'Male'\n  }, {\n    value: 'F',\n    label: 'Female'\n  }, {\n    value: 'O',\n    label: 'Other'\n  }];\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleGroup = e => {\n    setGroup(e.target.value);\n  };\n\n  const handleCustomer = e => {\n    setCustomer(e.target.value);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleConfirmPassword = e => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const handlePasswordCheck = e => {\n    if (password.length === confirmPassword) {\n      if (password !== confirmPassword) {\n        setPasswordCheck('Password does not match!!');\n      } else {\n        setPasswordCheck('Password match!!');\n      }\n    } else {\n      setPasswordCheck('Password does not match!!');\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name-basic\",\n        label: \"Name\",\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"email-basic\",\n        label: \"Email\",\n        onChange: handleEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-select-group\",\n        select: true,\n        label: \"Group\",\n        value: group,\n        onChange: handleGroup,\n        helperText: \"Please select your group\",\n        children: groups.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-select-customer\",\n        select: true,\n        label: \"Gender\",\n        value: customer,\n        onChange: handleCustomer,\n        helperText: \"Please select your gender\",\n        children: customers.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name-basic\",\n        label: \"Password\",\n        type: \"password\",\n        onChange: handlePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), password, /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name-basic\",\n        label: \"Confirm Password\",\n        type: \"Password\",\n        onChange: handleConfirmPassword,\n        onInput: handlePasswordCheck,\n        helperText: passwordCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this), confirmPassword, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name:   \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email:  \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Group:  \", group]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Customer:  \", customer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Name, \"rA1yqXxpPQDZvjBjnOs7YR/aR2c=\", true);\n\n_c = Name;\nexport default Name;\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/Users/rtdt/first-finished-app/src/nameInput.component.js"],"names":["TextField","React","useState","MenuItem","makeStyles","Name","name","setName","email","setEmail","group","setGroup","customer","setCustomer","password","setPassword","confirmPassword","setConfirmPassword","passwordCheck","setPasswordCheck","useStyles","theme","root","margin","spacing","width","classes","groups","value","label","customers","handleName","e","target","handleEmail","handleGroup","handleCustomer","handlePassword","handleConfirmPassword","handlePasswordCheck","length","map","option"],"mappings":"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","sourcesContent":["import { TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\nconst Name = () => {\n  const [name,setName] = useState('')\n  const [email,setEmail] = useState('')\n  const [group,setGroup] = useState('')\n  const [customer,setCustomer] = useState('')\n  const [password,setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [passwordCheck,setPasswordCheck] = useState('')\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(10),\n        width: '25ch',\n      },\n    },\n  }));\n  const classes = useStyles()\n\n  \n  const groups = [\n    {\n      value: 'VinFast',\n      label: 'VinFast',\n    },\n    {\n      value: 'VinSmart',\n      label: 'VinSmart',\n    },\n    {\n      value: 'VinMec',\n      label: 'VinMec',\n    },\n    {\n      value: 'VinPark',\n      label: 'VinPark',\n    },\n  ];\n\n  const customers = [\n    {\n      value: 'M',\n      label: 'Male',\n    },\n    {\n      value: 'F',\n      label: 'Female',\n    },\n    {\n      value: 'O',\n      label: 'Other',\n    },\n  ];\n\n  const handleName = (e) => {\n    setName(e.target.value)\n  }\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value)\n  }\n  \n  const handleGroup = (e) => {\n    setGroup(e.target.value)\n  }\n\n  const handleCustomer = (e) => {\n    setCustomer(e.target.value)\n  }\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value)\n  }\n  \n  const handleConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value)\n  }\n\n  const handlePasswordCheck = (e) => {\n  \n    if (password.length === confirmPassword){\n      if (password !== confirmPassword){\n        setPasswordCheck('Password does not match!!')\n      } else {\n        setPasswordCheck('Password match!!')\n      }\n    } else {\n      setPasswordCheck('Password does not match!!')\n    }\n    return\n  }\n\n  return (\n  <form className={classes.root} noValidate autoComplete=\"off\">\n  <div>\n    <TextField \n      id =\"name-basic\"\n      label=\"Name\"\n      onChange = {handleName}\n    />\n    <TextField \n      id =\"email-basic\"\n      label=\"Email\"\n      onChange = {handleEmail}\n    />\n    <TextField\n          id=\"standard-select-group\"\n          select\n          label=\"Group\"\n          value={group}\n          onChange={handleGroup}\n          helperText=\"Please select your group\"\n        >\n          {groups.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n    </TextField>\n    <TextField\n          id=\"standard-select-customer\"\n          select\n          label=\"Gender\"\n          value={customer}\n          onChange={handleCustomer}\n          helperText=\"Please select your gender\"\n        >\n          {customers.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n    </TextField>\n    <TextField \n      id =\"name-basic\"\n      label=\"Password\"\n      type=\"password\"\n      onChange = {handlePassword}\n    />\n    {password}\n    <TextField \n      id =\"name-basic\"\n      label=\"Confirm Password\"\n      type=\"Password\"\n      onChange = {handleConfirmPassword}\n      onInput = {handlePasswordCheck}\n      helperText = {passwordCheck}\n    />\n    {confirmPassword}\n  <p>User Details:</p>\n  <p>Name:   {name}</p>\n  <p>Email:  {email}</p>\n  <p>Group:  {group}</p>\n  <p>Customer:  {customer}</p>\n  </div>\n  </form>\n  )  \n}\n\nexport default Name"]},"metadata":{},"sourceType":"module"}